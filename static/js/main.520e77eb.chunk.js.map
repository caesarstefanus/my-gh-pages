{"version":3,"sources":["TicTacToe/TicTacToe.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","marginAutoContainer","width","height","display","backgroundColor","marginAutoItem","margin","alignItemsAndJustifyContent","alignItems","justifyContent","squareButton","fontSize","squarePaper","backdrop","zIndex","drawer","color","opacity","EMPTY_SQUARE","Square","props","classes","Button","variant","size","className","onClick","Zoom","in","value","Paper","elevation","calculateWinner","squares","winningLines","i","length","a","b","c","winner","winningLine","Board","this","colors","rows","cols","j","push","Grid","item","renderSquare","container","justify","spacing","React","Component","Game","state","history","Array","fill","stepNumber","nextPlayer","closedBackdrop","wrapper","createRef","slice","setState","concat","step","current","moves","map","move","desc","jumpTo","movesLeftCol","movesRightCol","status","openBackdrop","gameMessage","Backdrop","open","transitionDuration","style","Fade","transitionDelay","handleClick","start","createMuiTheme","palette","type","App","ThemeProvider","CssBaseline","Box","m","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.520e77eb.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Grid,\n  Paper,\n  Zoom,\n  Backdrop,\n  Fade,\n} from '@material-ui/core';\nimport { \n  makeStyles,\n} from '@material-ui/core/styles'\n// import './TicTacToe.css';\n\nconst useStyles = makeStyles(theme => ({\n  marginAutoContainer: {\n    width: 500,\n    height: 80,\n    display: 'flex',\n    backgroundColor: 'gold',\n  },\n  marginAutoItem: {\n    margin: 'auto'\n  },\n  alignItemsAndJustifyContent: {\n    width: 500,\n    height: 80,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'pink',\n  },\n  squareButton: {\n    width: 200,\n    height: 200,\n    fontSize: 120,\n  },\n  squarePaper: {\n    backgroundColor: 'transparent',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    opacity: 0.5,\n  },\n  /*\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n  */\n}));\n\nconst EMPTY_SQUARE = null;\n\nfunction Square(props) {\n  const classes = useStyles();\n  return (\n    <Button \n      variant=\"contained\" \n      color={props.color}\n      size=\"large\"\n      className={classes.squareButton}\n      onClick={props.onClick}\n    >\n      <Zoom in={props.value !== EMPTY_SQUARE}>\n        <Paper elevation={0} className={classes.squarePaper}>\n          {props.value}\n        </Paper>\n      </Zoom>\n    </Button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const winningLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < winningLines.length; ++i) {\n    const [a, b, c] = winningLines[i];\n    if (squares[a] !== EMPTY_SQUARE && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {winner: squares[a], winningLine: winningLines[i]};\n    }\n  }\n  return {winner: null, winningLine: []};\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.props.squares[i]}\n        color={this.props.colors[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    let rows = [];\n    for (let i = 0; i < 3; ++i) {\n      let cols = [];\n      for (let j = 0; j < 3; ++j) {\n        cols.push(<Grid item key={3 * i + j}>{this.renderSquare(3 * i + j)}</Grid>);\n      }\n      rows.push(\n        <Grid \n          container \n          item\n          key={i}\n          justify=\"center\" \n          alignItems=\"center\"\n          spacing={3}\n        >\n          {cols}\n        </Grid>\n      );\n    }\n    return (\n      <Grid \n        container \n        justify=\"center\" \n        alignItems=\"center\"\n        spacing={3}\n      >\n        {rows}\n      </Grid>\n    );\n    /*\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n    */\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(EMPTY_SQUARE), // at least 1 history (where it's all null)\n      }],\n      stepNumber: 0,\n      nextPlayer: 'X',\n      closedBackdrop: false,\n    };\n    this.wrapper = React.createRef();\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice(); // deepCopy the whole square state\n\n    if (calculateWinner(squares).winner || squares[i] !== EMPTY_SQUARE) return;\n\n    squares[i] = this.state.nextPlayer; // update the local made copy\n    this.setState({\n      history: history.concat([{ // concat, not push\n        squares: squares,\n      }]), // update state using the updated copy\n      stepNumber: history.length,\n      nextPlayer: (this.state.nextPlayer === 'X') ? 'O' : 'X',\n      closedBackdrop: false,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      history: this.state.history.slice(0, step + 1),\n      stepNumber: step,\n      nextPlayer: (step % 2 === 0) ? 'X' : 'O',\n      closedBackdrop: false,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares).winner;\n    const winningLine = calculateWinner(current.squares).winningLine;\n    const moves = history.map((step, move) => {\n      const desc = move ? ('Go to move #' + move) : 'Go to game start';\n      return (\n        <li key={move}>\n          <Button \n            variant={this.state.closedBackdrop && !move ? \"contained\" : \"outlined\"}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </Button>\n        </li>\n      )\n    });\n    let movesLeftCol = [];\n    let movesRightCol = [];\n    for (let i = 0; i < moves.length; ++i) {\n      if (i < 5) movesLeftCol.push(moves[i]);\n      else movesRightCol.push(moves[i]);\n    }\n    const status = winner ? ('Winner: ' + winner) : \n    (history.length === 10 ? ('Tie game') : ('Next player: ' + this.state.nextPlayer));\n    let colors = Array(9).fill(\"primary\");\n    if (winner) {\n      for (let i of winningLine) {\n        colors[i] = \"secondary\";\n      }\n    }\n    // TODO: opacity 0.5 when game ended\n    const openBackdrop = (winner || history.length === 10) && !this.state.closedBackdrop;\n    const gameMessage = winner ? winner + \" won!\" : \"Tie game!\";\n    return (\n      <div>\n        <Backdrop \n          open={openBackdrop} \n          transitionDuration={0} \n          style={{zIndex: 1, color: '#ffffff'}}\n          onClick={() => this.setState({closedBackdrop: true})}\n        >\n          <Fade in>\n            <div style={{fontSize: 100}}>{gameMessage}</div>\n          </Fade>\n        </Backdrop>\n        <div className=\"game\">\n          <Zoom in style={{transitionDelay: \"500ms\"}}>\n            <div className=\"game-board\">\n              <Board \n                colors={colors}\n                squares={current.squares}\n                onClick={(i) => this.handleClick(i)}\n              />\n            </div>\n          </Zoom>\n          <br></br>\n          <div className=\"game-info\">\n            <Grid container justify=\"center\">\n              <div>Status: {status}</div>\n            </Grid>\n            <Grid container justify=\"center\">\n              <ol start=\"0\">\n                {movesLeftCol}\n              </ol>\n              <ol start=\"5\">\n                {movesRightCol}\n              </ol>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n/*\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n*/\nexport default Game;","/*import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;*/\n/*\nimport React, { Component } from 'react'\nimport NavigationBar from './components/NavigationBar'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavigationBar />\n      </div>\n    )\n  }\n}\nexport default App\n*/\n/*\nimport React from 'react';\nimport Blog from './Blog';\n\nfunction App() {\n  return (\n    <Blog />\n  );\n}\n\nexport default App\n*/\nimport React from 'react';\nimport Game from './TicTacToe/TicTacToe'\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport {\n  // AppBar,\n  CssBaseline,\n  // Typography,\n  createMuiTheme,\n  Box,\n} from \"@material-ui/core\";\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box display=\"flex\" height={500}>\n        <Box m=\"auto\" height=\"100%\">\n          <Game />\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import MaterialTest from './MaterialTest';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}